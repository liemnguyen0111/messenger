
@import 'config';
@import 'utils';

// fixed background
.background
{
    background-image: repeating-linear-gradient(90deg, rgba(25,91,162, 0.05) 0px, rgba(25,91,162, 0.05) 1px,transparent 1px, transparent 91px),repeating-linear-gradient(45deg, rgba(25,91,162, 0.05) 0px, rgba(25,91,162, 0.05) 1px,transparent 1px, transparent 91px),repeating-linear-gradient(0deg, rgba(25,91,162, 0.05) 0px, rgba(25,91,162, 0.05) 1px,transparent 1px, transparent 61px),repeating-linear-gradient(90deg, rgba(25,91,162, 0.05) 0px, rgba(25,91,162, 0.05) 1px,transparent 1px, transparent 61px),repeating-linear-gradient(90deg, rgba(25,91,162, 0.05) 0px, rgba(25,91,162, 0.05) 1px,transparent 1px, transparent 16px),repeating-linear-gradient(0deg, rgba(25,91,162, 0.05) 0px, rgba(25,91,162, 0.05) 1px,transparent 1px, transparent 16px),linear-gradient(90deg, rgb(23,30,51),rgb(23,30,51));

    position: fixed;
    width: 100%;
    height: 100%;
    z-index: -1;
}

// Style for each square
.square{

    // Generate a random position, height, width and delay at each given square
    @for $i from 1 to $n-square + 1 {
        &:nth-child(#{$i})
        {
            top: random(90) * $n-percentage;
            left:  random(90) * $n-percentage;
            width: 8 * ($i * .3) + px;
            height: 8 * ($i * .3) + px;
            animation-delay: ($i*2s/ 6);
        }
    }

    // Each square will have a position of absolute
    position: absolute;
    border-radius: 10%;
    background-color: $light-color;
    box-shadow: 0 4px 5px 0  $light-color;
    backdrop-filter: blur( 4.0px );
    opacity: .8;
    border: .1px solid rgba( 255, 255, 255, 0.18 );
    animation: play 12s ease-in-out infinite;
    transform-style: preserve-3d;
    z-index: -1;
}



// Animation
@keyframes play
{
    0%{
        transform: translate3d(0,0,-90px) ;
        background-color: $light-color;
        box-shadow: 0 4px 5px 0  $light-color;
        border-radius: 10%;
    }
    20%{
        background-color: $bg;
        transform: translate3d(- random(90) * $n-percentage,random(90) * $n-percentage,90px) ;
    }
    40%{
        background-color: $secondary-color;
        transform: translate3d(random(150) * $n-percentage,random(90) * $n-percentage,50px)  ;
    }
    60%{
        border-radius: 30%;
        background-color: lightnen($primary-color, .5);
        box-shadow: 0 1px 8px 0  $light-color;
        transform: translate3d(- random(50) * $n-percentage,random(90) * $n-percentage,10px);
    }
    80%{
        background-color: $secondary-color;
        transform: translate3d(- random(150) * $n-percentage,random(90) * $n-percentage,60px)  ;
    }
    100%{
        transform: translate3d(0,0,-90px) ;
        background-color: $light-color;
        box-shadow: 0 4px 5px 0  $light-color;
        border-radius: 10%;
    }
}

